def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
            applicationId "com.kunci.mobile_pssi"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "Prima Academy Dev"
            resValue "string", "facebook_app_id", "1013525912595665"
            resValue "string", "fb_login_protocol_scheme", "fb1013525912595665"
            resValue "string", "facebook_client_token", "be2bf940b8f88a29cfd056a4a689f9ba"
            resValue "string", "firebase_channel_id", "prima_academy_id"
        }
        staging {
            dimension "flavor-type"
            applicationId "com.kunci.mobile_pssi"
            versionNameSuffix "-staging"
            resValue "string", "app_name", "Prima Academy Staging"
            resValue "string", "facebook_app_id", "1013525912595665"
            resValue "string", "fb_login_protocol_scheme", "fb1013525912595665"
            resValue "string", "facebook_client_token", "be2bf940b8f88a29cfd056a4a689f9ba"
            resValue "string", "firebase_channel_id", "prima_academy_id"
        }
        prod {
            dimension "flavor-type"
            applicationId "com.kunci.mobile_pssi"
            resValue "string", "app_name", "Prima Academy"
            resValue "string", "facebook_app_id", "1013525912595665"
            resValue "string", "fb_login_protocol_scheme", "fb1013525912595665"
            resValue "string", "facebook_client_token", "be2bf940b8f88a29cfd056a4a689f9ba"
            resValue "string", "firebase_channel_id", "prima_academy_id"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

   compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.kunci.mobile_pssi"
        minSdkVersion 25
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release

            minifyEnabled true
            // useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
}
